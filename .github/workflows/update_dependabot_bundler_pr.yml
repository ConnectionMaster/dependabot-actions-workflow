name: Update Dependabot Bundler PR

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["Build Dependabot Bundler PR"]
    types:
      - completed

jobs:
  update:
    runs-on: ubuntu-latest
    if: >
      ${{ github.event.workflow_run.event == 'push' &&
      github.event.workflow_run.conclusion == 'success' }}
    steps:
      - run: echo ${{github.event.workflow_run.id }}
      - uses: actions/checkout@v2
      - name: Cache dependabot pull request changes
        uses: actions/cache@v2
        with:
          path: ./dependabot-pr
          key: dependabot-pr-${{github.event.workflow_run.id }}
      # - name: 'Download artifact'
      #   uses: actions/github-script@v3.1.0
      #   with:
      #     script: |
      #       var artifacts = await github.actions.listWorkflowRunArtifacts({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          run_id: ${{github.event.workflow_run.id }},
      #       });
      #       var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
      #         return artifact.name == "dependabot-pr"
      #       })[0];
      #       var download = await github.actions.downloadArtifact({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          artifact_id: matchArtifact.id,
      #          archive_format: 'zip',
      #       });
      #       var fs = require('fs');
      #       fs.writeFileSync('${{github.workspace}}/dependabot-pr.zip', Buffer.from(download.data));
      - run: ls -la ./dependabot-pr
      - name: Unpack pr changes and set branch ref env
        run: |
          yes | cp -af ./dependabot-pr/. .
          echo "BRANCH_NAME=$(cat './BRANCH_REF' | sed 's/refs\/heads\///')" >> $GITHUB_ENV
      - name: Configure git
        run: |
          git config --local user.email "email"
          git config --local user.name "actions[bot]"
          git checkout --progress --force -B $BRANCH_NAME refs/remotes/origin/$BRANCH_NAME
      - run: git status
      - name: Commit Gemfile_next.lock and licenses
        run: |
          if [[ $(git status | grep '.licenses/') ]]; then
            git add .licenses/
            git commit -m "[dependabot skip] Update licenses"
          else
            echo "Licenses were not changed"
          fi
      - name: Push changes back to branch
        run: |
          if [[ "$BRANCH_NAME" =~ ^mai* ]]; then
            git push origin $BRANCH_NAME
          else
            echo "Branch ref doesn't look like a dependabot/bundler branch: $BRANCH_REF"
            exit 1
          fi
