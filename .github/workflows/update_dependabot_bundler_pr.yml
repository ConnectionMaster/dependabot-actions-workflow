# This workflow runs after `Build Dependabot Bundler PR` completes with a
# READ-WRITE GITHUB_TOKEN from the default branch and pushes updated license
# file changes back to the Dependabot PR branch.

# We run this as a separate workflow to isolate potentially unsafe `bundle
# install`s.

name: Update Dependabot Bundler PR
on:
  workflow_run:
    workflows: ["Build Dependabot Bundler PR"]
    types:
      - completed

jobs:
  update:
    runs-on: ubuntu-latest
    if: >
      ${{ github.event.workflow_run.event == 'push' &&
      github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
      - name: Download pr changes
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "dependabot-pr"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/dependabot-pr.zip', Buffer.from(download.data));
      - name: Unpack pr changes
        run: unzip -o dependabot-pr.zip
      - name: Set branch name
        run: echo "BRANCH_NAME=$(cat './BRANCH_REF' | sed 's/refs\/heads\///')" >> $GITHUB_ENV
      - name: Configure git
        run: |
          git config --local user.email "email"
          git config --local user.name "actions[bot]"
      - name: Checkout the branch from 'Build Dependabot Bundler PR'
        run: git checkout --progress --force -B $BRANCH_NAME
      - run: git status
      # NOTE: Prefixing commit messages with `[dependabit skip]` allows
      # dependabot to rebase/update the pull request, force-pushing over any
      # changes
      - name: Commit license changes
        run: |
          if [[ $(git status | grep '.licenses/') ]]; then
            git add .licenses/
            git commit -m "[dependabot skip] Update licenses"
          else
            echo "Licenses were not changed"
          fi
      - name: Push changes back to dependabot/bundler branch
        run: |
          if [[ "$BRANCH_NAME" =~ ^dependabot/bundler* ]]; then
            git push origin $BRANCH_NAME
          else
            echo "Branch ref doesn't look like a dependabot/bundler branch: $BRANCH_REF"
            exit 1
          fi
